plugins {
	id 'org.springframework.boot' version '2.7.11'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
	id 'jacoco'
	id "org.sonarqube" version "4.2.1.3168"

}

group = 'com.pragma.powerup'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	springBootVersion = "2.7.3"
	mapstructVersion = "1.5.2.Final"
	lombokVersion = "1.18.24"
	lombokMapstructBindingVersion = "0.2.0"
	mySqlConnectorVersion = "8.0.32"
	openApiVersion = "1.6.11"
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
	implementation "org.springframework.boot:spring-boot-starter-validation:${springBootVersion}"
	implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
	implementation "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
	developmentOnly "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
	testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
	implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'

	implementation 'com.amazonaws:aws-java-sdk-cognitoidp:1.12.517'

	runtimeOnly "mysql:mysql-connector-java:${mySqlConnectorVersion}"

	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	implementation "org.springdoc:springdoc-openapi-ui:${openApiVersion}"
	implementation "org.springdoc:springdoc-openapi-webflux-ui:${openApiVersion}"
	implementation 'com.auth0:java-jwt:4.4.0'
	implementation 'com.auth0:jwks-rsa:0.22.1'

	testImplementation 'org.mockito:mockito-core:5.4.0'
	testImplementation 'org.hamcrest:hamcrest:2.2'
	testImplementation 'org.assertj:assertj-core:3.24.2'
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	finalizedBy jacocoTestReport
}

sonar {
	properties {
		property "sonar.projectKey", "DayhanaRamirezMoreno_users-api"
		property "sonar.organization", "dayhanaramirezmoreno"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

jacocoTestReport {
	dependsOn test

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"com/pragma/users/api/UsersApiApplication.class",
					"com/pragma/users/api/infrastructure/out/jpa/mapper/**",
					"com/pragma/users/api/infrastructure/out/jpa/entity/**",
					"com/pragma/users/api/domain/model/**",
					"com/pragma/users/api/infrastructure/documentation/**",
					"com/pragma/users/api/infrastructure/configuration/**",
					"com/pragma/users/api/application/mapper/**",
					"com/pragma/users/api/infrastructure/validation/DateValidation.class",
					"com/pragma/users/api/infrastructure/validation/DateValidationImpl.class"
			])
		}))
	}
}