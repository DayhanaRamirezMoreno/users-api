name: SonarCloud

on:
  deployment:
    types:
      - created

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Obtain parameters
        run: |
          MI_AWS_ACCESS_KEY=$(aws ssm get-parameter --name "dev-AWS_ACCESS_KEY" --query "Parameter.Value" --output text)
          echo "Parameter Value: $parameter_value"
          
          MI_AWS_SECRET_KEY=$(aws ssm get-parameter --name "dev-AWS_SECRET_KEY" --query "Parameter.Value" --output text)
          echo "Parameter Value: $parameter_value"
          
          MI_DB_RDS_PASSWORD=$(aws ssm get-parameter --name "dev-DB_RDS_PASSWORD" --query "Parameter.Value" --output text)
          echo "Parameter Value: $parameter_value"
          
          MI_DB_USERS_RDS_URL=$(aws ssm get-parameter --name "dev-DB_USERS_RDS_URL" --query "Parameter.Value" --output text)
          echo "Parameter Value: $parameter_value"
          
          MI_DB_USERS_RDS_USERNAME=$(aws ssm get-parameter --name "dev-DB_USERS_RDS_USERNAME" --query "Parameter.Value" --output text)
          echo "Parameter Value: $parameter_value"
          

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build --info

      - name: Build, tag and push the image to amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: new-users-api-repo
          IMAGE_TAG: latest
        run: |
          docker build \
            --build-arg AWS_ACCESS_KEY=$MI_AWS_ACCESS_KEY \
            --build-arg AWS_SECRET_KEY=$MI_AWS_AWS_SECRET_KEY \
            --build-arg DB_RDS_PASSWORD=$MI_DB_RDS_PASSWORD \
            --build-arg DB_USERS_RDS_URL=$MI_DB_USERS_RDS_URL \
            --build-arg DB_USERS_RDS_USERNAME=$MI_DB_USERS_RDS_USERNAME \